name: ci
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17'
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-gorace-${{ hashFiles('**/go.sum') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-gorace-${{ hashFiles('**/go.sum') }}-
          ${{ runner.os }}-gorace-
    - run: go test -race ./...

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17'
    - uses: actions/checkout@v2
    - uses: golangci/golangci-lint-action@v2
      with:
        version: v1.45.2

  docker-image:
    needs:
    - test
    - lint
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - uses: Surgo/docker-smart-tag-action@v1
      id: smarttag
      with:
        docker_image: tsuru/networkapi-ingress-controller
        default_branch: main
        tag_with_sha: "true"
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.smarttag.outputs.tag }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
